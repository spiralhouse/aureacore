name: Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        run: |
          rustup toolchain install nightly --component llvm-tools-preview
          rustup override set nightly
          rustup show

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-coverage-

      - name: Install grcov
        run: |
          mkdir -p "${HOME}/.local/bin"
          curl -sL https://github.com/mozilla/grcov/releases/download/v0.8.18/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf - -C "${HOME}/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Create initial test files
        run: |
          mkdir -p src
          echo 'pub fn add(a: i32, b: i32) -> i32 { a + b }

          #[cfg(test)]
          mod tests {
              use super::*;

              #[test]
              fn test_add() {
                  assert_eq!(add(2, 2), 4);
              }
          }' > src/lib.rs

          echo '[package]
          name = "aureacore"
          version = "0.1.0"
          edition = "2021"

          [dependencies]' > Cargo.toml

          echo "=== Contents of src/lib.rs ==="
          cat src/lib.rs
          echo "=== Contents of Cargo.toml ==="
          cat Cargo.toml

      - name: Run tests with coverage
        run: |
          cargo clean
          CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' cargo test --verbose

      - name: Generate coverage report
        run: |
          grcov . --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o coverage.lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.lcov
          fail_ci_if_error: true
          verbose: true 