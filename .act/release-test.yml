name: Release Test

on:
  push:
    branches: [main]

jobs:
  test-changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies (mock)
        run: |
          echo "Setting up Node.js environment"
          echo "This is a mock for testing with act"

      - name: Mock conventional changelog check
        id: conventional-commits
        run: |
          echo "Mocking conventional changelog check"
          echo "release=true" >> "$GITHUB_OUTPUT"
          echo "version=0.6.0" >> "$GITHUB_OUTPUT"
          echo "## [0.6.0]" > TEST_CHANGELOG.md
          echo "" >> TEST_CHANGELOG.md
          echo "### Features" >> TEST_CHANGELOG.md
          echo "" >> TEST_CHANGELOG.md
          echo "* **changelog:** improve handling of changelog updates ([debdb5b](https://github.com/spiralhouse/aureacore/commit/debdb5bfb9a4c7d9f2e8a6d3ab76f8b97c2a5e57))" >> TEST_CHANGELOG.md

      - name: Test Node.js script
        run: |
          mkdir -p .github/scripts
          cat > .github/scripts/test-script.js << 'EOL'
          const fs = require('fs');

          console.log('Reading test changelog');
          const content = fs.readFileSync('TEST_CHANGELOG.md', 'utf8');
          console.log('Test changelog content:');
          console.log(content);

          console.log('Updating test changelog');
          const updatedContent = `# Changelog\n\n## [Unreleased]\n\n### Added\n- \n\n### Changed\n- \n\n### Fixed\n- \n\n${content}`;
          fs.writeFileSync('UPDATED_CHANGELOG.md', updatedContent);
          console.log('Updated changelog written to UPDATED_CHANGELOG.md');
          EOL

          echo "Running test script:"
          node .github/scripts/test-script.js

      - name: Display results
        run: |
          echo "Should release: ${{ steps.conventional-commits.outputs.release }}"
          echo "Version: ${{ steps.conventional-commits.outputs.version }}"
          echo "Test changelog content:"
          cat TEST_CHANGELOG.md

          if [ -f "UPDATED_CHANGELOG.md" ]; then
            echo "Updated changelog content:"
            cat UPDATED_CHANGELOG.md
          fi

      - name: Debug commit history
        run: |
          echo "Latest 10 commits:"
          git log -n 10 --pretty=format:"%h %s"
          echo -e "\nConventional commits since latest tag:"
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")
          git log $latest_tag..HEAD --pretty=format:"%h %s" | grep -E '^[a-f0-9]+ (feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\([a-z-]+\))?: .+' || echo "No conventional commits found"
