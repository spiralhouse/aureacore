name: Release Test (Actual)

on:
  push:
    branches:
      - main
    paths-ignore:
      - "CHANGELOG.md"
      - "Cargo.toml"
      - "Cargo.lock"

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.conventional-commits-release.outputs.release }}
      next_version: ${{ steps.conventional-commits-release.outputs.version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Rust
        run: |
          echo "Setting up Rust toolchain"
          echo "This is a mock for testing with act"

      - name: Check conventional commits for release
        id: conventional-commits-release
        run: |
          echo "Checking for conventional commits"
          echo "release=true" >> "$GITHUB_OUTPUT"
          echo "version=0.1.1" >> "$GITHUB_OUTPUT"
          echo "Would normally use TriPSs/conventional-changelog-action@v3"

  release:
    needs: check-release
    if: ${{ needs.check-release.outputs.should_release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Git user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set up Rust
        run: |
          echo "Setting up Rust toolchain"
          echo "This is a mock for testing with act"

      - name: Install cargo-release
        run: |
          echo "Would install cargo-release"
          echo "This is a mock for testing with act"

      - name: Update CHANGELOG and version
        id: changelog
        run: |
          echo "Updating CHANGELOG and version"
          echo "version=0.1.1" >> "$GITHUB_OUTPUT"
          echo "clean_changelog=## 0.1.1 (2025-03-31)\n\n### Features\n\n* Add semantic versioning support\n\n### Bug Fixes\n\n* Fix workflow issues" >> "$GITHUB_OUTPUT"
          echo "Would normally use TriPSs/conventional-changelog-action@v3"

      - name: Mock GitHub Release creation
        run: |
          echo "Creating GitHub Release v${{ steps.changelog.outputs.version }}"
          echo "Release body would be:"
          echo "${{ steps.changelog.outputs.clean_changelog }}"
          echo "Would normally use softprops/action-gh-release@v1"
