version: "3"

tasks:
  setup:
    desc: Install required development tools
    cmds:
      - rustup toolchain install nightly
      - rustup component add llvm-tools-preview rustfmt clippy --toolchain nightly
      - rustup override set nightly
      - cargo install grcov
      - cargo install cargo-deny
      - cargo install cargo-audit

  format:
    desc: Format code using rustfmt
    cmds:
      - cargo fmt --all -- --check

  format-fix:
    desc: Format code and apply changes
    cmds:
      - cargo fmt --all

  lint:
    desc: Run clippy lints
    cmds:
      - cargo clippy --all-targets --all-features -- -D warnings

  test:
    desc: Run tests
    cmds:
      - cargo test --all-features

  coverage:
    desc: Generate code coverage reports
    cmds:
      - rm -f coverage.lcov unit-coverage.lcov integration-coverage.lcov
      - CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE="coverage-%p-%m.profraw" cargo test --all-features
      - |
        # Generate unit test coverage
        grcov . --binary-path ./target/debug/deps/ -s ./src -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o unit-coverage.lcov

        # Generate integration test coverage
        grcov . --binary-path ./target/debug/deps/ -s ./tests -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o integration-coverage.lcov

        # Generate combined coverage for backwards compatibility
        grcov . --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" -o coverage.lcov
      - echo "Coverage reports generated - unit-coverage.lcov, integration-coverage.lcov, coverage.lcov"

  clean:
    desc: Clean build artifacts and coverage files
    cmds:
      - cargo clean
      - rm -f coverage*.profraw
      - rm -f coverage.lcov unit-coverage.lcov integration-coverage.lcov

  deps:
    desc: Check dependencies and licenses
    cmds:
      - cargo deny check

  audit:
    desc: Run security audit on dependencies
    cmds:
      - cargo audit

  check-all:
    desc: Run all checks (format, lint, test, coverage, deps, audit)
    deps: [format, lint, test, coverage, deps, audit]

  default:
    desc: Show available tasks
    cmds:
      - task --list
